POST http://localhost:8080/productTypes
Content-Type: application/json

{
  "description": "This is a product type"
}

> {%

client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("productType", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/inventoryItemStatusTypes
Content-Type: application/json

{
  "description": "inventory item status type"
}

> {%
 client.global.set("inventoryItemStatusType", response.headers.valueOf("Location"))
 %}

###

POST http://localhost:8080/lots
Content-Type: application/json

{
  "creationDate": "2000-01-01",
  "quantity": 1
}

> {%
 client.global.set("lot", response.headers.valueOf("Location"))
 %}

###

POST http://localhost:8080/containerTypes
Content-Type: application/json

{
  "description": "This is a container type"
}

> {%
client.global.set("containerType", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/containers
Content-Type: application/json

{
  "description": "This is a container",
  "type": "{{containerType}}"
}

> {%
client.global.set("container", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/inventoryItemStatusTypes
Content-Type: application/json

{
  "description": "This is a status type"
}

> {%
client.global.set("inventoryItemStatusType", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/goodIdentificationTypes
Content-Type: application/json

{
  "description": "This is a good identification type"
}

> {%

client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("goodIdentificationType", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/productAssociationTypes
Content-Type: application/json

{
  "description": "This is a product association type"
}

> {%

client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("productAssociationType", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/estimatedProductCostTypes
Content-Type: application/json

{
  "description": "This is an estimated product type"
}

> {%

client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("estimatedProductCostType", response.headers.valueOf("Location"));
%}

###


POST http://localhost:8080/quantityBreaks
Content-Type: application/json

{
  "fromQuantity": 1,
  "thruQuantity": 2
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("quantityBreak", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/orderValues
Content-Type: application/json

{
  "fromAmount": 1.1,
  "thruAmount": 2.2
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("orderValue", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/saleTypes
Content-Type: application/json

{
  "description": "This is a sale type"
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("saleType", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/unitOfMeasures
Content-Type: application/json

{
  "description": "This is a Unit of Measure",
  "abbreviation": "TiaUM"
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("unitOfMeasure", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/productCategories
Content-Type: application/json

{
  "description": "This is a product category"
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("productCategory", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/preferenceTypes
Content-Type: application/json

{
  "description": "This is a preference type"
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("preferenceType", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/ratingTypes
Content-Type: application/json

{
  "description": "This is a rating type"
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("ratingType", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/featureApplicabilityTypes
Content-Type: application/json

{
  "description": "This is a product type"
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("featureApplicabilityType", response.headers.valueOf("Location"));
%}

###
POST http://localhost:8080/featureCategories
Content-Type: application/json

{
  "description": "This is a feature category"
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("featureCategory", response.headers.valueOf("Location"))
 %}

###
POST http://localhost:8080/featureInteractionTypes
Content-Type: application/json

{
  "description": "This is a feature interaction type"
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("featureInteractionType", response.headers.valueOf("Location"))
 %}

###

POST http://localhost:8080/features
Content-Type: application/json

{
  "description": "This is feature 1",
  "category": "{{featureCategory}}"
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("feature1", response.headers.valueOf("Location"))
 %}

###

POST http://localhost:8080/features
Content-Type: application/json

{
  "description": "This is feature 2",
  "category": "{{featureCategory}}"
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

client.global.set("feature2", response.headers.valueOf("Location"))
 %}

###
POST http://localhost:8080/products
Content-Type: application/json

{
  "name": "This is a product",
  "introductionDate": "2001-01-01",
  "salesDiscontinuationDate": "2002-02-02",
  "comment": "This is a comment on a product",
  "manufacturedBy": "48303eaa-dfb3-4def-8ab0-6543eabf6286",
  "type": "{{productType}}",
  "unitOfMeasure": "{{unitOfMeasure}}"
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
client.global.set("product", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/products
Content-Type: application/json

{
  "name": "This is another product",
  "introductionDate": "2003-03-03",
  "salesDiscontinuationDate": "2004-04-04",
  "comment": "This is another comment on a product",
  "manufacturedBy": "48303eaa-dfb3-4def-8ab0-6543eabf6286",
  "type": "{{productType}}",
  "unitOfMeasure": "{{unitOfMeasure}}"
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
client.global.set("product2", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/featureInteractions
Content-Type: application/json

{

  "feature1": "{{feature1}}",
  "feature2": "{{feature2}}",
  "type": "{{featureInteractionType}}",
  "product": "{{product}}"

}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
client.global.set("featureInteraction", response.headers.valueOf("Location"))
 %}

###

POST http://localhost:8080/featureApplicabilities
Content-Type: application/json

{
  "fromDate": "2001-01-01",
  "thruDate": "2002-02-02",
  "type" : "{{featureApplicabilityType}}",
  "feature": "{{feature1}}",
  "product": "{{product}}"
  }

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
client.global.set("featureApplicability", response.headers.valueOf("Location"))
 %}

###

POST http://localhost:8080/suppliers
Content-Type: application/json

{
  "availableFromDate": "2001-01-01",
  "availableThruDate": "2002-02-02",
  "standardLeadTime":"P1Y",
  "comment": "This is a supplier comment",
  "product": "{{product}}",
  "organizationId": "{{$uuid}}",
  "preferenceType" : "{{preferenceType}}",
  "ratingType": "{{ratingType}}"

  }

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
client.global.set("supplier", response.headers.valueOf("Location"))
 %}

###

POST http://localhost:8080/priceComponents
Content-Type: application/json

{
  "fromDate": "2001-01-01",
  "thruDate": "2002-02-02",
  "price": "1.00",
  "percent": ".99",
  "comment": "This is a price component",
  "geographicBoundaryId": "{{$uuid}}",
  "partyType": "{{$uuid}}",
  "category": "{{productCategory}}",
  "quantityBreak": "{{quantityBreak}}",
  "orderValue": "{{orderValue}}",
  "saleType": "{{saleType}}",
  "unitOfMeasure": "{{unitOfMeasure}}",
  "partyID": "{{$uuid}}",
  "feature": "{{feature1}}",
  "product": "{{product}}"
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
client.global.set("priceComponent", response.headers.valueOf("Location"))
 %}

###

POST http://localhost:8080/estimatedProductCosts
Content-Type: application/json

{
  "fromDate": "2001-01-01",
  "thruDate": "2002-02-02",
  "cost": "1.00",
  "type": "{{estimatedProductCostType}}",
  "product": "{{product}}",
  "feature": "{{feature1}}",
  "geographicBoundaryId": "{{$uuid}}",
  "organizationId": "{{$uuid}}"
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
client.global.set("estimatedProductCost", response.headers.valueOf("Location"))
 %}

###

POST http://localhost:8080/productAssociations
Content-Type: application/json

{
  "fromDate": "2001-01-01",
  "thruDate": "2002-02-02",
  "reason": "This is a product association reason",
  "quantityUsed": 1,
  "instruction": "This is a product association instruction",
  "quantity": 2,
  "type": "{{productAssociationType}}",
  "fromProduct": "{{product}}",
  "toProduct": "{{product2}}"
}

> {%
client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
client.global.set("productAssociation", response.headers.valueOf("Location"))
 %}

###

POST http://localhost:8080/goodIdentifications
Content-Type: application/json

{
  "value": "this is a good identification",
  "good": "{{product}}",
  "type": "{{goodIdentificationType}}"
}

> {%
client.test("Request executed successfully", function() {
client.assert(response.status === 201, "Response status is not 201");
});
client.global.set("goodIdentification", response.headers.valueOf("Location"))
%}

###

POST http://localhost:8080/inventoryItems
Content-Type: application/json

{
  "good": "{{product}}",
  "serialNum": "This is an inventory item",
  "quantityOnHand": 1,
  "statusType": "{{inventoryItemStatusType}}",
  "lot": "{{lot}}",
  "container": "{{container}}"
}

> {%
client.test("Request executed successfully", function() {
client.assert(response.status === 201, "Response status is not 201");
});
client.global.set("inventoryItem d", response.headers.valueOf("Location"));
%}

###

POST http://localhost:8080/reorderGuidelines
Content-Type: application/json

{
  "fromDate": "2001-01-01",
  "thruDate": "2002-02-02",
  "reorderQuantity": 1,
  "reorderLevel": 2,
  "basedOnGeographicBoundary": "{{$uuid}}",
  "basedOnFacility": "{{$uuid}}",
  "basedOnInternalOrganization": "{{$uuid}}",
  "good": "{{product}}"
}

> {%
client.test("Request executed successfully", function() {
client.assert(response.status === 201, "Response status is not 201");
});
client.global.set("reorderGuideline", response.headers.valueOf("Location"));
%}

###

GET {{product}}

###

GET {{product}}/reorderGuidelines

###
